cat > Assets/Vestige/Config/assets_manifest.json << 'EOF'
{
  "required": [
      {"id":"app_icon_1024","type":"icon","path":"Assets/Vestige/Icons/app_1024.png","size":[1024,1024]},
          {"id":"ui_btn_primary","type":"ui","path":"Assets/Vestige/UI/btn_primary.png","size":[256,96]},
              {"id":"icon_crystal","type":"icon","path":"Assets/Vestige/Icons/icon_crystal.png","size":[512,512]}
                ]
                }
                EOF
                cat > Assets/Vestige/Scripts/Bootstrap.cs << 'EOF'
                using UnityEngine;
                using UnityEngine.UI;
                using UnityEngine.EventSystems;

                public class Bootstrap {
                  [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.AfterSceneLoad)]
                    static void Init() {
                        // Ensure IdleSystem host
                            var host = new GameObject("VestigeHost");
                                host.AddComponent<IdleSystem>();
                                    var um = host.AddComponent<UpgradeManager>();
                                        um.defs = new UpgradeDef[] {
                                              new UpgradeDef{ id="tap_power", name="Tap Power", level=0, base_cost=10, cost_mul=1.15, effect_per_level=1 },
                                                    new UpgradeDef{ id="auto_miner", name="Auto Miner", level=0, base_cost=50, cost_mul=1.20, ticks_per_sec=0.2, yield_per_tick=1 },
                                                          new UpgradeDef{ id="yield_boost", name="Yield Boost", level=0, base_cost=200, cost_mul=1.25, multiplier_per_level=1.10 }
                                                              };

                                                                  // Canvas
                                                                      var canvasGO = new GameObject("Canvas", typeof(Canvas), typeof(CanvasScaler), typeof(GraphicRaycaster));
                                                                          var canvas = canvasGO.GetComponent<Canvas>();
                                                                              canvas.renderMode = RenderMode.ScreenSpaceOverlay;
                                                                                  var scaler = canvasGO.GetComponent<CanvasScaler>();
                                                                                      scaler.uiScaleMode = CanvasScaler.ScaleMode.ScaleWithScreenSize;
                                                                                          scaler.referenceResolution = new Vector2(1080, 1920);

                                                                                              // EventSystem
                                                                                                  var es = new GameObject("EventSystem", typeof(EventSystem), typeof(StandaloneInputModule));

                                                                                                      // Text
                                                                                                          var textGO = new GameObject("CrystalText", typeof(Text));
                                                                                                              textGO.transform.SetParent(canvas.transform, false);
                                                                                                                  var txt = textGO.GetComponent<Text>();
                                                                                                                      txt.alignment = TextAnchor.UpperCenter;
                                                                                                                          txt.font = Resources.GetBuiltinResource<Font>("Arial.ttf");
                                                                                                                              txt.fontSize = 64;
                                                                                                                                  txt.text = "0";
                                                                                                                                      var rtT = textGO.GetComponent<RectTransform>();
                                                                                                                                          rtT.anchorMin = new Vector2(0.1f, 0.8f);
                                                                                                                                              rtT.anchorMax = new Vector2(0.9f, 0.9f);
                                                                                                                                                  rtT.offsetMin = rtT.offsetMax = Vector2.zero;

                                                                                                                                                      // Button
                                                                                                                                                          var btnGO = new GameObject("TapButton", typeof(Image), typeof(Button));
                                                                                                                                                              btnGO.transform.SetParent(canvas.transform, false);
                                                                                                                                                                  var img = btnGO.GetComponent<Image>();
                                                                                                                                                                      img.color = new Color(0.2f,0.6f,1f,0.8f);
                                                                                                                                                                          var rtB = btnGO.GetComponent<RectTransform>();
                                                                                                                                                                              rtB.anchorMin = new Vector2(0.2f, 0.2f);
                                                                                                                                                                                  rtB.anchorMax = new Vector2(0.8f, 0.5f);
                                                                                                                                                                                      rtB.offsetMin = rtB.offsetMax = Vector2.zero;
                                                                                                                                                                                          var button = btnGO.GetComponent<Button>();

                                                                                                                                                                                              // Tap handler
                                                                                                                                                                                                  var th = host.AddComponent<TapHandler>();
                                                                                                                                                                                                      th.tapButton = button;
                                                                                                                                                                                                          th.crystalText = txt;
                                                                                                                                                                                                              th.upgrades = um;
                                                                                                                                                                                                                }
                                                                                                                                                                                                                }
                                                                                                                                                                                                                EOF
                                                                                                                                                                                                                